load("@build_bazel_rules_apple//apple:ios.bzl", "ios_application")
load("@build_bazel_rules_apple//apple:versioning.bzl", "apple_bundle_version")
load("@build_bazel_rules_swift//swift:swift.bzl", "swift_library")
load("//common/bazel_tools:shared.bzl", "uikit_info", "versions")


apple_bundle_version(
    name = "Version",
    build_version = "0.0.1",
    short_version_string = "1.0",
)

swift_library(
    name = "Sources",
    srcs = [
        "Sources/TrainAppDelegate.swift",
    ],
    data = [
        "Resources/Main.storyboard",
    ],
    module_name = "Sources",
    tags = ["manual"],
)


ios_application(
    name = "Train",
    app_icons = ["//apple/Resources:AppIcon.xcassets"],
    # app_icons = ["//apple/Contents:AppIcon.xcassets"],

    # bundle_id = "com.example.hello-world-swift",
    bundle_id = uikit_info.bundle_id,
    # bundle_name = uikit_info.bundle_name,
    # entitlements = "Haap/ios app.entitlements",
    # executable_name = uikit_info.executable_name,

    families = [
        "iphone",
        "ipad",
    ],
    infoplists = [":Info.plist"],
    launch_storyboard = "//apple/Resources:Launch.storyboard",
    minimum_os_version = versions.minimum_ios_version,
    deps = [":Sources"],
    visibility = [
        "//:__subpackages__",
        "@rules_xcodeproj//xcodeproj:generated",
    ],
    resources = ["//apple/Resources:resources",],
    version = ":Version",

    # resources = glob(
    #     [
    #         "Resources/Assets/Assets.xcassets/**",
    #     ],
    #     exclude = ["Resources/Assets/Assets.xcassets/AppIcon.appiconset/**"],
    # ),
)


    
   
    # Add localizable assets here.
    # strings = glob(["*.lproj/Localizable.strings"]),
    







# swift_library(
#     name = "Tests",
#     testonly = True,
#     srcs = [
#         "Tests/Tests.swift",
#     ],
#     tags = ["manual"],
#     deps = [
#         ":Sources",
#     ],
# )

# # Pass the depending UI test's name as module_name to support test_filter
# swift_library(
#     name = "UITests",
#     testonly = True,
#     srcs = [
#         "Tests/UITests.swift",
#     ],
#     module_name = "HelloWorldSwiftUITests",
#     tags = ["manual"],
# )

# ios_unit_test(
#     name = "UnitTests",
#     minimum_os_version = "15.0",
#     deps = [":Tests"],
# )

# genrule(
#     name = "CreateTestCoverageManifest",
#     srcs = ["Sources/AppDelegate.swift"],
#     outs = [
#         "CoverageManifest.instrumented_files",
#     ],
#     cmd = "echo $(SRCS) > $@",
# )

# ios_unit_test(
#     name = "UnitTestsWithCoverageManifest",
#     minimum_os_version = "15.0",
#     test_coverage_manifest = "CoverageManifest.instrumented_files",
#     deps = [":Tests"],
# )

# ios_application(
#     name = "HelloWorldSwift",
#     app_icons = ["//examples/resources:PhoneAppIcon.xcassets"],
#     bundle_id = "com.example.hello-world-swift",
#     families = [
#         "iphone",
#         "ipad",
#     ],
#     infoplists = [":Info.plist"],
#     launch_storyboard = "//examples/resources:Launch.storyboard",
#     minimum_os_version = "15.0",
#     deps = [":Sources"],
# )

# # Not normally needed, just done for rules_apple's examples so a
# # 'bazel test examples/...' ensures all Examples still build.
# build_test(
#     name = "ExamplesBuildTest",
#     targets = [":HelloWorldSwift"],
# )

# ios_ui_test(
#     name = "HelloWorldSwiftUITests",
#     minimum_os_version = "15.0",
#     runner = "@build_bazel_rules_apple//apple/testing/default_runner:ios_xctestrun_ordered_runner",
#     test_host = ":HelloWorldSwift",
#     deps = [":UITests"],
# )

# # Example using docc_archive to generate documentation
# docc_archive(
#     name = "HelloWorldSwift.doccarchive",
#     default_code_listing_language = "en",
#     dep = ":HelloWorldSwift",
#     diagnostic_level = "information",
#     enable_inherited_docs = True,
#     fallback_bundle_identifier = "com.example.hello-world-swift",
#     fallback_bundle_version = "1.0.0",
#     fallback_display_name = "HelloWorldSwift",
# )
